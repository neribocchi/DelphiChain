unit Node;

interface
uses horse,
FMX.Types,
sysutils,
block,
chain,
JSONRPCUtil;

type

TNode = Class (TObject)

blockchain:TChain;
constructor create;

End;

implementation

{ TNode }

constructor TNode.create;
begin

  if THorse.IsRunning then
  begin
    log.d('already running');
    exit;
  end;

  THorse.Post('/initChain',
    procedure(Req: THorseRequest; Res: THorseResponse)
    begin
      if assigned(blockchain) then
      begin
        Res.Send('blockchain already initializaed on chainid:'+blockchain.chainID.ToString);
        exit;
      end;

      var chainID:=strtoint(req.ContentFields.Items['chainID']);
      var genesis:=req.ContentFields.Items['genesis'];

      blockchain:=TChain.create(genesis,100,chainID);

      Res.Send('blockchain id:'+chainID.ToString+' created with genesis:'+genesis);
    end);

  THorse.Post('/addBlock',
    procedure(Req: THorseRequest; Res: THorseResponse)
    begin
      log.d(req.ContentFields.Items['data']);
      Res.Send('pong');
    end);

  THorse.Listen(9000);
end;

end.
